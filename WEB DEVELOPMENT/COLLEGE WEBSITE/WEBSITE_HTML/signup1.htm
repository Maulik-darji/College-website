<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Indus Engineering Nerds</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <link rel="icon" href="Engineering.ico" type="image/x-icon">
    <style>
       body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            display: flex;
            height: 100vh; /*vh means the viewport height */
            background-color: #06080D;
            color: white;
        }
        .container{
            display: flex;
            flex: 1;
        }
        
        .image-grid {
            display:grid;
            grid-template-columns: repeat(2,1fr); /*fr stands for the fraction of the space availabel for the*/
            gap: 15px;
            padding: 15px;
            background-color: #ffffff25;
            font-weight: 600;
        }

        .image-grid div {
            background-color: #06080Db7;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: rgb(0, 0, 0);
            font-size: 1.2em;
            padding: 20px;
            text-align: center;
            aspect-ratio: 1;
            font-family: 'Poppins', sans-serif;
        }
        
        .form-container {
            display:flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            flex: 1;
            background-color: #06080D;
            max-width: 700px;
            max-height: auto;
        }
        .form-container form {
            width: 100%;
            max-width: 400px;
        }
        .form-container h2 {
            margin-bottom: 20px;
            font-size: 2em;
        }
        .form-group {
            margin-bottom: 20px;
            position: relative; /* Ensure relative positioning for absolute overlay */
            
        }
        .form-group label {
            display: block;
            margin-bottom: 3px;
            font-weight: 600;
        }
        .form-group input {
            width: 100%;
            padding: 10px;
            border-radius: 12px;
            border: 1px solid #252525; /* Added border style */
            background-color: #252525;
            color: white;
            
            
        }
        .form-group input:focus {
            outline: none;
            border-color: white;
        }
        .form-group .password-strength {
            margin-top: 5px;
            font-size: 0.8em;
            color: #73edd5; /* Color for strength indicator */
        }
        .form-group .error-message {
            margin-top: 5px;
            font-size: 0.8em;
            color: #f56565; /* Color for error message */
        }
        
        .form-group button {
            width: 48%;
            padding: 10px;
            border-radius: 12px;
            border: 2px;
            background-color: #4983ff;
            color: rgb(0, 0, 0);
            font-family: 'Poppins', sans-serif;
            cursor: pointer;
            margin-right: 5px;
            font-size: 0.9em;
            
        }
        .form-group button:hover {
            background-color: #4983ff62 ;
            color: white;
            
        }
        
        .SYMBOL {
            color: white;
            font-size: 20px;
        }
        
        .form-group .toggle-password {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            cursor: pointer;
        }
        @keyframes slideOut {
            0% { transform: translateX(0); opacity: 1; }
            100% { transform: translateX(-100%); opacity: 0; }
        }
        /* Add this CSS to style the "Forget Password" button */
            .form-password {
                margin-top: 10px; /* Adjust spacing as needed */
            }

            .form-password button {
                background: none;
                border: none;
                color: #ffffff; /* Button text color */
                font-family: 'Poppins', sans-serif;
                cursor: pointer;
                text-decoration: underline; /* Underline style for link appearance */
                font-size: 0.9em; /* Adjust font size as needed */
                transition: color 0.3s ease; /* Smooth color transition on hover */
            }

            .form-password button:hover {
                color: #cc1830; /* Change text color on hover */
            }

            .form-password button:focus {
                outline: none; /* Remove focus outline */
            }

        /* Add this CSS to style the "Remember Me" checkbox */
        .form-group-remember {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .form-group-remember input {
            margin-right: 10px;
        }

        .form-group-remember label {
            font-weight: normal;
        }
        hr{
            margin: auto;
            height: 590px;
            margin-right: 600px;

        }
        .swipe-container {
            position: relative;
            width: 400px;
            height: 50px;
            background-color: #252525;
            border-radius: 25px;
            margin: 20px;
            overflow: hidden;
            color: rgb(83, 83, 83);
            text-align: center;
        }
        .swipe-button {
            position: absolute;
            top: 0;
            left: 0;
            width: 120px;
            height: 43px;
            background-color: rgb(0, 0, 0);
            border-radius: 25px;
            border: solid #252525;
            display: flex;
            align-items: center;
            justify-content: center;
            color: rgb(255, 255, 255);
            cursor: pointer;
            font-display: center;
            text-align: center;
        }
        .optionsignup {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start; /* Center items horizontally */
            flex: 1;
            background-color: #06080D;
            max-width: 600px;
            max-height: 911px; /* Added px unit */
            padding-left: 0px; /* Add padding to the left to move the button to the yellow space */
            text-align: center;
        }

.optionsignup .google {
    display: flex;
    align-items: center; /* Align items vertically */
}

.optionsignup button {
    width: 300px; /* Adjust width automatically based on content */
    height: 35px;
    margin: 0px; /* Add some vertical margin */
    background-color: #252525;
    border: none; /* Remove border */
    font-size: 15px;
    text-align: center;
    border-radius: 12px;
    color: white;
    display: flex;
    align-items: center; /* Align text and image vertically */
    padding: 0; /* Adjust padding for better appearance */

}

.optionsignup button:hover{
    background-color:rgb(247, 247, 247);
    color:black;
}
.optionsignup img {
    width: 30px;
    height: 30px;
    margin-right: 10px; /* Add margin between image and text */
}
.separator {
    width: 100%;
    height: 1px;
    background-color: #ffffff25;
    margin: 20px 0; /* Adjust spacing as needed */
    display: flex;
        }
.theme-switcher {
    position: fixed;
    top: 20px;
    right: 20px;
    width: 40px;
    height: 40px;
    background-color: #ffffff;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 1.2em;
    color: #000;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    transition: background-color 0.3s, color 0.3s;
}

body.dark-mode .theme-switcher {
    background-color: #000;
    color: #fff;
}

body.dark-mode {
    background-color: #000;
    color: #fff;
}
body.dark-mode .form-container{
    background-color: #fff;
    color: #000;
}

body.dark-mode .optionsignup{
    background-color: #fff;
    color: #000;
}
body.dark-mode .swipe-button {
            background-color: #b8b8b8;
            color: #000;
            border-color:#b8b8b8 ;
}
body.dark-mode .optionsignup button {
            background-color: #e0e0e0;
            color: #000;
        }
body.dark-mode .form-group input {
            background-color: #f0f0f0;
            color: #000;
        }
body.dark-mode .image-grid div{
    background-color: #ffffff;
    color: #000;
}
body.dark-mode .image-grid{
    background-color: #06080D;
}
body.dark-mode .swipe-container{
    background-color: #f0f0f0;
}
body.dark-mode .form-password button{
    color: black;
}
body.dark-mode .SYMBOL{
    color: black;
}
body.dark-mode .form-group button:hover{
    background-color: #274585;
}
body.dark-mode .separator{
    background-color: #06080D;
}
    </style>
</head>
<body>
    <div class="theme-switcher" id="theme-switcher">
        &#9728; <!-- Sun icon for light mode -->
    </div>
        <div 
        class="image-grid">
            <div>
                <b class="SYMBOL">&lt;/&gt; Engineering Nerds</b>
            </div>
            <div style="background: linear-gradient(90deg, #fa5560, #b14bf4 ,#4d91ff);"><b></b>College Material<br>Notes</div>
            <div style="background: linear-gradient(90deg,  #fa5560, #b14bf4 ,#4d91ff);">Entertainment<br>Enjoyment</div>
            <div style="background: linear-gradient(90deg, #ffe100, #00c3ff);"><br>Connection<br>Interaction</div>
            <div style="background: linear-gradient(90deg, #ffe100, #00c3ff);">Community<br>& Many More</div>
            <div id="blackbox"></div>
        </div>
        <div 
        class="form-container">
            <form
             id="signup-form">
                <h2>Sign Up</h2>
                <p>Login To The World Of Engineering Nerds</p>
                <div class="form-group">
                    <label for="identifier">Email/Username</label>
                    <input type="text" id="identifier" name="identifier" placeholder="Maulik_Abhimanyu_2024">
                </div>
                
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" placeholder="abc@123" >
                    <div class="password-strength" id="password-strength"></div>
                    <div class="error-message" id="password-error"></div>
                </div>
                <div class="form-group-remember">
                    <input type="checkbox" id="remember-me" name="remember-me">
                    <label for="remember-me">Remember Me</label>
                </div>
                
                <div class="form-group">
                    <button type="button" id="create-account-btn">Next </button>
                    <button type="button" id="login-btn">Login</button>
                </div>
                <div class="form-password">
                    <button type="button" id="form-password">Forget Password</button>
                </div>
            </form>
            <div class="swipe-container">
                <div class="swipe-button" id="swipebutton">>>> </div>
                <p>Swipe to skip</p>
            </div>
        </div>
        <div 
        class="optionsignup">
            <form id="goofac">
                <div class="google">
                    <button type="button" id="google-login"> <img src="https://cdn1.iconfinder.com/data/icons/google-s-logo/150/Google_Icons-09-512.png" alt="">continue with google</button>
                </div>
            </form>
            <div class="separator"></div>
        </div>
    </div>
    


    <script>
        const passwordInput = document.getElementById('password');
        const passwordStrengthText = document.getElementById('password-strength');
        const passwordError = document.getElementById('password-error');

        passwordInput.addEventListener('input', function() {
            const password = passwordInput.value;

            // Check if password contains at least one character not at the start
            const containsCharacterNotAtStart = /[a-zA-Z0-9].*[a-zA-Z]/.test(password);

            // Check if password contains at least 2 letters, 2 numbers, and 1 special character
            const containsLetters = password.match(/[a-zA-Z]/g);
            const containsNumbers = password.match(/[0-9]/g);
            const containsSpecialCharacters = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password);
            const hasRequiredCharacters = containsLetters && containsLetters.length >= 2 &&
                                           containsNumbers && containsNumbers.length >= 2 &&
                                           containsSpecialCharacters;

            // Check if password contains any spaces
            const containsSpaces = /\s/.test(password);

            // Determine strength and display messages based on conditions
            if (containsCharacterNotAtStart && !containsSpaces && hasRequiredCharacters) {
                passwordStrengthText.textContent = 'Strong';
                passwordStrengthText.style.color = '#73edd5';
                passwordError.textContent = ''; // Clear error message
            } else if (containsCharacterNotAtStart && !containsSpaces) {
                passwordStrengthText.textContent = 'Medium';
                passwordStrengthText.style.color = '#f6e05e';
                passwordError.textContent = 'Password should contain at least 2 letters, 2 numbers, and 1 special character, and not start with a special character or number.';
                passwordError.style.color = '#f6e05e';
            } else {
                passwordStrengthText.textContent = 'Weak';
                passwordStrengthText.style.color = '#f56565';
                passwordError.textContent = 'Invalid password format. Please check the requirements.';
                passwordError.style.color = '#f56565';
            }
        });

        // Event listener for the Create new account button
        document.getElementById('create-account-btn').addEventListener('click', function() {
            // Slide animation
            document.body.style.animation = 'slideOut 0.5s forwards';

            // Redirect after animation
            setTimeout(function() {
                window.location.href = 'signup2.html';
            }, 500); // Adjust the time based on your animation duration
        });
        document.getElementById('form-password').addEventListener('click', function() {
            // Slide animation
            document.body.style.animation = 'slideOut 0.5s forwards';

            // Redirect after animation
            setTimeout(function() {
                window.location.href = 'forpassword.html';
            }, 500); // Adjust the time based on your animation duration
        }); 

        document.getElementById('google-login').addEventListener('click', function() {
            // Slide animation
            document.body.style.animation = 'slideOut 0.5s forwards';

            // Redirect after animation
            setTimeout(function() {
                window.location.href = 'login.html';
            }, 500); // Adjust the time based on your animation duration
        });

        const swipebutton = document.getElementById('swipebutton');
        const swipecontainer = document.querySelector('.swipe-container');
        let isDragging = false;
        let startX;

        swipebutton.addEventListener('mousedown', (e) => {
            isDragging = true;
            startX = e.clientX;
            document.addEventListener('mousemove', onmousemove);
            document.addEventListener('mouseup', onmouseup);
        });

        function onmousemove(e) {
            if (!isDragging) return;
            const deltaX = e.clientX - startX;
            const maxDeltaX = swipecontainer.offsetWidth - swipebutton.offsetWidth;

            // Ensure the button stays within the container
            if (deltaX >= 0 && deltaX <= maxDeltaX) {
                swipebutton.style.transform = `translateX(${deltaX}px)`;
            }
        }

        function onmouseup(e) {
            if (!isDragging) return;
            isDragging = false;
            const deltaX = e.clientX - startX;
            const maxDeltaX = swipecontainer.offsetWidth - swipebutton.offsetWidth;

            // Redirect only if swiped sufficiently
            if (deltaX >= maxDeltaX) {
                swipeSuccess();
                setTimeout(() => {
                    window.location.href = 'Finalcorrection.html';
                }, 500); // Adjust the time based on your needs
            } else {
                swipebutton.style.transform = 'translateX(0)';
            }
            document.removeEventListener('mousemove', onmousemove);
            document.removeEventListener('mouseup', onmouseup);
        }

        function swipeSuccess() {
            swipebutton.textContent = 'Skipped';
            swipebutton.style.backgroundColor = '#487cff';
            swipebutton.style.color = 'white';
        }

        document.getElementById('login-btn').addEventListener('click', function() {
            // Slide animation
            document.body.style.animation = 'slideOut 0.5s forwards';

            // Redirect after animation
            setTimeout(function() {
                window.location.href = 'login.html';
            }, 500); // Adjust the time based on your animation duration
        });
        const themeSwitcher = document.getElementById('theme-switcher');
    themeSwitcher.addEventListener('click', () => {
        document.body.classList.toggle('dark-mode');

        if (document.body.classList.contains('dark-mode')) {
            themeSwitcher.innerHTML = '&#9788;'; // Moon icon for dark mode
        } else {
            themeSwitcher.innerHTML = '&#9728;'; // Sun icon for light mode
        }
    });
    </script>
</body>
</html>